#include <math.h>

#include "HemiQuad.h"

void gauss01_01(double *x, double *w) {
	x[0]=5.00000000000000000000e-001; w[0]=1.00000000000000000000e+000;
}
void gauss01_02(double *x, double *w) {
	x[0]=7.88675134594812882255e-001; w[0]=5.00000000000000000000e-001;
	x[1]=2.11324865405187117745e-001; w[1]=5.00000000000000000000e-001;
}
void gauss01_03(double *x, double *w) {
	x[0]=8.87298334620741688518e-001; w[0]=2.77777777777777777778e-001;
	x[1]=5.00000000000000000000e-001; w[1]=4.44444444444444444444e-001;
	x[2]=1.12701665379258311482e-001; w[2]=2.77777777777777777778e-001;
}
void gauss01_04(double *x, double *w) {
	x[0]=9.30568155797026287612e-001; w[0]=1.73927422568726928687e-001;
	x[1]=6.69990521792428132401e-001; w[1]=3.26072577431273071313e-001;
	x[2]=3.30009478207571867599e-001; w[2]=3.26072577431273071313e-001;
	x[3]=6.94318442029737123880e-002; w[3]=1.73927422568726928687e-001;
}
void gauss01_05(double *x, double *w) {
	x[0]=9.53089922969331996399e-001; w[0]=1.18463442528094543757e-001;
	x[1]=7.69234655052841545518e-001; w[1]=2.39314335249683234021e-001;
	x[2]=5.00000000000000000000e-001; w[2]=2.84444444444444444444e-001;
	x[3]=2.30765344947158454482e-001; w[3]=2.39314335249683234021e-001;
	x[4]=4.69100770306680036012e-002; w[4]=1.18463442528094543757e-001;
}
void gauss01_06(double *x, double *w) {
	x[0]=9.66234757101576013906e-001; w[0]=8.56622461895851725201e-002;
	x[1]=8.30604693233132256831e-001; w[1]=1.80380786524069303785e-001;
	x[2]=6.19309593041598454315e-001; w[2]=2.33956967286345523695e-001;
	x[3]=3.80690406958401545685e-001; w[3]=2.33956967286345523695e-001;
	x[4]=1.69395306766867743169e-001; w[4]=1.80380786524069303785e-001;
	x[5]=3.37652428984239860938e-002; w[5]=8.56622461895851725201e-002;
}
void gauss01_07(double *x, double *w) {
	x[0]=9.74553956171379262263e-001; w[0]=6.47424830844348466353e-002;
	x[1]=8.70765592799697219932e-001; w[1]=1.39852695744638333951e-001;
	x[2]=7.02922575688698583453e-001; w[2]=1.90915025252559472475e-001;
	x[3]=5.00000000000000000000e-001; w[3]=2.08979591836734693878e-001;
	x[4]=2.97077424311301416547e-001; w[4]=1.90915025252559472475e-001;
	x[5]=1.29234407200302780068e-001; w[5]=1.39852695744638333951e-001;
	x[6]=2.54460438286207377369e-002; w[6]=6.47424830844348466353e-002;
}
void gauss01_08(double *x, double *w) {
	x[0]=9.80144928248768115842e-001; w[0]=5.06142681451881295763e-002;
	x[1]=8.98333238706813369796e-001; w[1]=1.11190517226687235272e-001;
	x[2]=7.62766204958164492909e-001; w[2]=1.56853322938943643669e-001;
	x[3]=5.91717321247824902470e-001; w[3]=1.81341891689180991483e-001;
	x[4]=4.08282678752175097530e-001; w[4]=1.81341891689180991483e-001;
	x[5]=2.37233795041835507091e-001; w[5]=1.56853322938943643669e-001;
	x[6]=1.01666761293186630204e-001; w[6]=1.11190517226687235272e-001;
	x[7]=1.98550717512318841582e-002; w[7]=5.06142681451881295763e-002;
}
void gauss01_09(double *x, double *w) {
	x[0]=9.84080119753813044918e-001; w[0]=4.06371941807872059859e-002;
	x[1]=9.18015553663317897150e-001; w[1]=9.03240803474287020292e-002;
	x[2]=8.06685716350295198654e-001; w[2]=1.30305348201467731159e-001;
	x[3]=6.62126711701904464519e-001; w[3]=1.56173538520001420034e-001;
	x[4]=5.00000000000000000000e-001; w[4]=1.65119677500629881582e-001;
	x[5]=3.37873288298095535481e-001; w[5]=1.56173538520001420034e-001;
	x[6]=1.93314283649704801346e-001; w[6]=1.30305348201467731159e-001;
	x[7]=8.19844463366821028503e-002; w[7]=9.03240803474287020292e-002;
	x[8]=1.59198802461869550822e-002; w[8]=4.06371941807872059859e-002;
}
void gauss01_10(double *x, double *w) {
	x[0]=9.86953264258585860039e-001; w[0]=3.33356721543440687968e-002;
	x[1]=9.32531683344492255366e-001; w[1]=7.47256745752902965729e-002;
	x[2]=8.39704784149512203117e-001; w[2]=1.09543181257991021998e-001;
	x[3]=7.16697697064623595400e-001; w[3]=1.34633359654998177546e-001;
	x[4]=5.74437169490815605442e-001; w[4]=1.47762112357376435087e-001;
	x[5]=4.25562830509184394558e-001; w[5]=1.47762112357376435087e-001;
	x[6]=2.83302302935376404600e-001; w[6]=1.34633359654998177546e-001;
	x[7]=1.60295215850487796883e-001; w[7]=1.09543181257991021998e-001;
	x[8]=6.74683166555077446340e-002; w[8]=7.47256745752902965729e-002;
	x[9]=1.30467357414141399610e-002; w[9]=3.33356721543440687968e-002;
}
void gauss01_11(double *x, double *w) {
	x[0]=9.89114329073028496402e-001; w[0]=2.78342835580868332414e-002;
	x[1]=9.43531299884047649538e-001; w[1]=6.27901847324523123173e-002;
	x[2]=8.65076002787024662047e-001; w[2]=9.31451054638671257130e-002;
	x[3]=7.59548064603405907963e-001; w[3]=1.16596882295995239959e-001;
	x[4]=6.34771577976172486166e-001; w[4]=1.31402272255123331090e-001;
	x[5]=5.00000000000000000000e-001; w[5]=1.36462543388950315357e-001;
	x[6]=3.65228422023827513834e-001; w[6]=1.31402272255123331090e-001;
	x[7]=2.40451935396594092037e-001; w[7]=1.16596882295995239959e-001;
	x[8]=1.34923997212975337953e-001; w[8]=9.31451054638671257130e-002;
	x[9]=5.64687001159523504624e-002; w[9]=6.27901847324523123173e-002;
	x[10]=1.08856709269715035980e-002; w[10]=2.78342835580868332414e-002;
}
void gauss01_12(double *x, double *w) {
	x[0]=9.90780317123359625345e-001; w[0]=2.35876681932559135973e-002;
	x[1]=9.52058628185237428339e-001; w[1]=5.34696629976592154801e-002;
	x[2]=8.84951337097152343518e-001; w[2]=8.00391642716731131673e-002;
	x[3]=7.93658977143308723648e-001; w[3]=1.01583713361532960875e-001;
	x[4]=6.83915749499090096876e-001; w[4]=1.16746268269177404380e-001;
	x[5]=5.62616704255734457736e-001; w[5]=1.24573522906701392500e-001;
	x[6]=4.37383295744265542264e-001; w[6]=1.24573522906701392500e-001;
	x[7]=3.16084250500909903124e-001; w[7]=1.16746268269177404380e-001;
	x[8]=2.06341022856691276352e-001; w[8]=1.01583713361532960875e-001;
	x[9]=1.15048662902847656482e-001; w[9]=8.00391642716731131673e-002;
	x[10]=4.79413718147625716608e-002; w[10]=5.34696629976592154801e-002;
	x[11]=9.21968287664037465473e-003; w[11]=2.35876681932559135973e-002;
}
void gauss01_13(double *x, double *w) {
	x[0]=9.92091527359294074736e-001; w[0]=2.02420023826579397600e-002;
	x[1]=9.58799199611488982603e-001; w[1]=4.60607499188642239572e-002;
	x[2]=9.00789045366654956397e-001; w[2]=6.94367551098936192318e-002;
	x[3]=8.21174669720170110322e-001; w[3]=8.90729903809728691400e-002;
	x[4]=7.24246375518223426439e-001; w[4]=1.03908023768444251156e-001;
	x[5]=6.15229157977567397033e-001; w[5]=1.13141590131448619206e-001;
	x[6]=5.00000000000000000000e-001; w[6]=1.16275776615436955097e-001;
	x[7]=3.84770842022432602967e-001; w[7]=1.13141590131448619206e-001;
	x[8]=2.75753624481776573561e-001; w[8]=1.03908023768444251156e-001;
	x[9]=1.78825330279829889678e-001; w[9]=8.90729903809728691400e-002;
	x[10]=9.92109546333450436029e-002; w[10]=6.94367551098936192318e-002;
	x[11]=4.12008003885110173967e-002; w[11]=4.60607499188642239572e-002;
	x[12]=7.90847264070592526359e-003; w[12]=2.02420023826579397600e-002;
}
void gauss01_14(double *x, double *w) {
	x[0]=9.93141904348406169421e-001; w[0]=1.75597301658759315159e-002;
	x[1]=9.64217441831786758668e-001; w[1]=4.00790435798801049028e-002;
	x[2]=9.13600657534882496595e-001; w[2]=6.07592853439515923447e-002;
	x[3]=8.43646452405842735074e-001; w[3]=7.86015835790967672848e-002;
	x[4]=7.57624318179077045983e-001; w[4]=9.27691987389689068709e-002;
	x[5]=6.59556184463944880218e-001; w[5]=1.02599231860647801983e-001;
	x[6]=5.54027474353671831033e-001; w[6]=1.07631926731578895098e-001;
	x[7]=4.45972525646328168967e-001; w[7]=1.07631926731578895098e-001;
	x[8]=3.40443815536055119782e-001; w[8]=1.02599231860647801983e-001;
	x[9]=2.42375681820922954017e-001; w[9]=9.27691987389689068709e-002;
	x[10]=1.56353547594157264926e-001; w[10]=7.86015835790967672848e-002;
	x[11]=8.63993424651175034051e-002; w[11]=6.07592853439515923447e-002;
	x[12]=3.57825581682132413318e-002; w[12]=4.00790435798801049028e-002;
	x[13]=6.85809565159383057920e-003; w[13]=1.75597301658759315159e-002;
}
void gauss01_15(double *x, double *w) {
	x[0]=9.93996259010242714245e-001; w[0]=1.53766209980586341773e-002;
	x[1]=9.68636696200352952154e-001; w[1]=3.51830237440540623546e-002;
	x[2]=9.24103291705213608100e-001; w[2]=5.35796102335859675059e-002;
	x[3]=8.62208865680085023708e-001; w[3]=6.97853389630771572239e-002;
	x[4]=7.85486086304269423769e-001; w[4]=8.31346029084969667766e-002;
	x[5]=6.97075673538781684949e-001; w[5]=9.30805000077811055134e-002;
	x[6]=6.00597046998717261150e-001; w[6]=9.92157426635557882281e-002;
	x[7]=5.00000000000000000000e-001; w[7]=1.01289120962780636440e-001;
	x[8]=3.99402953001282738850e-001; w[8]=9.92157426635557882281e-002;
	x[9]=3.02924326461218315051e-001; w[9]=9.30805000077811055134e-002;
	x[10]=2.14513913695730576231e-001; w[10]=8.31346029084969667766e-002;
	x[11]=1.37791134319914976292e-001; w[11]=6.97853389630771572239e-002;
	x[12]=7.58967082947863918997e-002; w[12]=5.35796102335859675059e-002;
	x[13]=3.13633037996470478461e-002; w[13]=3.51830237440540623546e-002;
	x[14]=6.00374098975728575522e-003; w[14]=1.53766209980586341773e-002;
}
void gauss01_16(double *x, double *w) {
	x[0]=9.94700467495824966298e-001; w[0]=1.35762297058770474259e-002;
	x[1]=9.72287511536616288039e-001; w[1]=3.11267619693239464314e-002;
	x[2]=9.32815601193915871940e-001; w[2]=4.75792558412463924050e-002;
	x[3]=8.77702204177501516948e-001; w[3]=6.23144856277669360262e-002;
	x[4]=8.08938122201321874223e-001; w[4]=7.47979944082883660408e-002;
	x[5]=7.29008388828613693171e-001; w[5]=8.45782596975012690947e-002;
	x[6]=6.40801775389629456615e-001; w[6]=9.13017075224617944334e-002;
	x[7]=5.47506254918818720093e-001; w[7]=9.47253052275342481427e-002;
	x[8]=4.52493745081181279907e-001; w[8]=9.47253052275342481427e-002;
	x[9]=3.59198224610370543385e-001; w[9]=9.13017075224617944334e-002;
	x[10]=2.70991611171386306829e-001; w[10]=8.45782596975012690947e-002;
	x[11]=1.91061877798678125777e-001; w[11]=7.47979944082883660408e-002;
	x[12]=1.22297795822498483052e-001; w[12]=6.23144856277669360262e-002;
	x[13]=6.71843988060841280598e-002; w[13]=4.75792558412463924050e-002;
	x[14]=2.77124884633837119610e-002; w[14]=3.11267619693239464314e-002;
	x[15]=5.29953250417503370192e-003; w[15]=1.35762297058770474259e-002;
}
void gauss01_17(double *x, double *w) {
	x[0]=9.95287737657208667838e-001; w[0]=1.20741514342739659801e-002;
	x[1]=9.75337760884383880611e-001; w[1]=2.77297646869936005647e-002;
	x[2]=9.40119576863492951061e-001; w[2]=4.25180741585895904418e-002;
	x[3]=8.90757001948400703463e-001; w[3]=5.59419235967019855474e-002;
	x[4]=8.28835579608345382925e-001; w[4]=6.75681842342627366432e-002;
	x[5]=7.56345268543238483943e-001; w[5]=7.70228805384051440407e-002;
	x[6]=6.75615881726938157649e-001; w[6]=8.40020510782250222550e-002;
	x[7]=5.89242090747923927925e-001; w[7]=8.82813526834963231626e-002;
	x[8]=5.00000000000000000000e-001; w[8]=8.97232351781032627291e-002;
	x[9]=4.10757909252076072075e-001; w[9]=8.82813526834963231626e-002;
	x[10]=3.24384118273061842351e-001; w[10]=8.40020510782250222550e-002;
	x[11]=2.43654731456761516057e-001; w[11]=7.70228805384051440407e-002;
	x[12]=1.71164420391654617075e-001; w[12]=6.75681842342627366432e-002;
	x[13]=1.09242998051599296537e-001; w[13]=5.59419235967019855474e-002;
	x[14]=5.98804231365070489385e-002; w[14]=4.25180741585895904418e-002;
	x[15]=2.46622391156161193886e-002; w[15]=2.77297646869936005647e-002;
	x[16]=4.71226234279133216228e-003; w[16]=1.20741514342739659801e-002;
}
void gauss01_18(double *x, double *w) {
	x[0]=9.95782584210465473365e-001; w[0]=1.08080067632416551567e-002;
	x[1]=9.77911974785698877591e-001; w[1]=2.48572744474848982267e-002;
	x[2]=9.46301233248777869603e-001; w[2]=3.82128651274445282646e-002;
	x[3]=9.01852479486261557841e-001; w[3]=5.04710220531435827814e-002;
	x[4]=8.45843521530176603937e-001; w[4]=6.12776033557392300923e-002;
	x[5]=7.79885415536973767304e-001; w[5]=7.03214573353253256024e-002;
	x[6]=7.05875580731421323018e-001; w[6]=7.73423375631326224627e-002;
	x[7]=6.25943112845752754794e-001; w[7]=8.21382418729163614930e-002;
	x[8]=5.42387506520867650621e-001; w[8]=8.45711914815717959203e-002;
	x[9]=4.57612493479132349379e-001; w[9]=8.45711914815717959203e-002;
	x[10]=3.74056887154247245206e-001; w[10]=8.21382418729163614930e-002;
	x[11]=2.94124419268578676982e-001; w[11]=7.73423375631326224627e-002;
	x[12]=2.20114584463026232696e-001; w[12]=7.03214573353253256024e-002;
	x[13]=1.54156478469823396063e-001; w[13]=6.12776033557392300923e-002;
	x[14]=9.81475205137384421588e-002; w[14]=5.04710220531435827814e-002;
	x[15]=5.36987667512221303970e-002; w[15]=3.82128651274445282646e-002;
	x[16]=2.20880252143011224094e-002; w[16]=2.48572744474848982267e-002;
	x[17]=4.21741578953452663499e-003; w[17]=1.08080067632416551567e-002;
}
void gauss01_19(double *x, double *w) {
	x[0]=9.96203421921792201595e-001; w[0]=9.73089411486323851816e-003;
	x[1]=9.80104076067415015426e-001; w[1]=2.24071133828498001664e-002;
	x[2]=9.51577951807408950821e-001; w[2]=3.45222713688206132904e-002;
	x[3]=9.11357328268571412489e-001; w[3]=4.57450108112249997322e-002;
	x[4]=8.60483088667614689309e-001; w[4]=5.57833227736669973580e-002;
	x[5]=8.00272652330840511735e-001; w[5]=6.43769812696681138378e-002;
	x[6]=7.32285370687980472859e-001; w[6]=7.13033510868033058879e-002;
	x[7]=6.58282049981814915995e-001; w[7]=7.63830210329298333894e-002;
	x[8]=5.80179322820112687934e-001; w[8]=7.94844216969771738250e-002;
	x[9]=5.00000000000000000000e-001; w[9]=8.05272249243918479896e-002;
	x[10]=4.19820677179887312066e-001; w[10]=7.94844216969771738250e-002;
	x[11]=3.41717950018185084005e-001; w[11]=7.63830210329298333894e-002;
	x[12]=2.67714629312019527141e-001; w[12]=7.13033510868033058879e-002;
	x[13]=1.99727347669159488265e-001; w[13]=6.43769812696681138378e-002;
	x[14]=1.39516911332385310691e-001; w[14]=5.57833227736669973580e-002;
	x[15]=8.86426717314285875105e-002; w[15]=4.57450108112249997322e-002;
	x[16]=4.84220481925910491787e-002; w[16]=3.45222713688206132904e-002;
	x[17]=1.98959239325849845736e-002; w[17]=2.24071133828498001664e-002;
	x[18]=3.79657807820779840549e-003; w[18]=9.73089411486323851816e-003;
}
void gauss01_20(double *x, double *w) {
	x[0]=9.96564299592547462393e-001; w[0]=8.80700356957605915593e-003;
	x[1]=9.81985963638956895634e-001; w[1]=2.03007149001934706655e-002;
	x[2]=9.56117214125662952934e-001; w[2]=3.13360241670545317848e-002;
	x[3]=9.19558485911109411697e-001; w[3]=4.16383707883523743624e-002;
	x[4]=8.73165953230075396307e-001; w[4]=5.09650599086202175184e-002;
	x[5]=8.18026840363257512726e-001; w[5]=5.90972659807592086562e-002;
	x[6]=7.55433500975413549002e-001; w[6]=6.58443192245883134492e-002;
	x[7]=6.86853044357709780336e-001; w[7]=7.10480546591910256646e-002;
	x[8]=6.13892925570822539040e-001; w[8]=7.45864932363018733939e-002;
	x[9]=5.38263260566748666877e-001; w[9]=7.63766935653629253490e-002;
	x[10]=4.61736739433251333123e-001; w[10]=7.63766935653629253490e-002;
	x[11]=3.86107074429177460960e-001; w[11]=7.45864932363018733939e-002;
	x[12]=3.13146955642290219664e-001; w[12]=7.10480546591910256646e-002;
	x[13]=2.44566499024586450998e-001; w[13]=6.58443192245883134492e-002;
	x[14]=1.81973159636742487274e-001; w[14]=5.90972659807592086562e-002;
	x[15]=1.26834046769924603693e-001; w[15]=5.09650599086202175184e-002;
	x[16]=8.04415140888905883027e-002; w[16]=4.16383707883523743624e-002;
	x[17]=4.38827858743370470661e-002; w[17]=3.13360241670545317848e-002;
	x[18]=1.80140363610431043662e-002; w[18]=2.03007149001934706655e-002;
	x[19]=3.43570040745253760694e-003; w[19]=8.80700356957605915593e-003;
}

typedef void (*gaussq)(double *, double *);
gaussq gauss01[20] = { 
	gauss01_01, gauss01_02, gauss01_03, gauss01_04, 
	gauss01_05, gauss01_06, gauss01_07, gauss01_08, 
	gauss01_09, gauss01_10, gauss01_11, gauss01_12, 
	gauss01_13, gauss01_14, gauss01_15, gauss01_16, 
	gauss01_17, gauss01_18, gauss01_19, gauss01_20
};

HemiQuad::HemiQuad(int mindegree) {
	int go = (mindegree+1)/2+1;
	order = go*(mindegree+1);
	x = new double[order];
	y = new double[order];
	z = new double[order];
	w = new double[order];

	for(int i = 0; i <= mindegree; i++) {
		double ang = 2.0 * M_PI * i / ((double)mindegree + 1);
		double ca = cos(ang), sa = sin(ang);
		gauss01[go-1](z + i*go, w + i*go);
		for (int j = 0; j < go; j++) {
			double r;
			r = z[i*go + j];
			r = sqrt(1. - r*r);
			x[i*go + j] = r * ca;
			y[i*go + j] = r * sa;
			w[i*go + j] /= (mindegree + 1);
		}
	}
}

HemiQuad::~HemiQuad() {
	delete[] x;
	delete[] y;
	delete[] z;
	delete[] w;
}
